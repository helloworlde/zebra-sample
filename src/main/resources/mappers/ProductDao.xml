<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.helloworlde.zebra.dao.ProductDao">
    <resultMap id="BaseResultMap" type="io.github.helloworlde.zebra.model.Product">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, `name`, price, amount, add_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from product
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.github.helloworlde.zebra.model.Product"
            useGeneratedKeys="true">
        insert into product (`name`, price, amount,
                             add_time)
        values (#{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{amount,jdbcType=INTEGER},
                #{addTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="io.github.helloworlde.zebra.model.Product" useGeneratedKeys="true">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="io.github.helloworlde.zebra.model.Product">
        update product
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="io.github.helloworlde.zebra.model.Product">
        update product
        set `name`   = #{name,jdbcType=VARCHAR},
            price    = #{price,jdbcType=DOUBLE},
            amount   = #{amount,jdbcType=INTEGER},
            add_time = #{addTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getAll" resultType="io.github.helloworlde.zebra.model.Product">
        select *
        from product
    </select>

</mapper>